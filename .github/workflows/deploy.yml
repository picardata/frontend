# This is a basic workflow that is manually triggered

name: Deploy

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      version:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Version number'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  deploy:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Deploy to Prod server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_IP }}
          username: "emewuser"
          port: "22"
          key: ${{ secrets.EMEW_SSH_KEY }}
          passphrase: ${{ secrets.EMEW_SSH_PASSPHRASE }}
          script: |
            hostname && aws ecr get-login-password --region ap-southeast-1 \
              | docker login --username AWS \
              --password-stdin 612314046177.dkr.ecr.ap-southeast-1.amazonaws.com \
              && docker pull 612314046177.dkr.ecr.ap-southeast-1.amazonaws.com/picardata/frontend:${{ github.event.inputs.version }} \
              && docker rm -f frontend && docker run --name=frontend --network=picardata_vpcbr --ip="10.5.5.21" \
              --env NUXT_HOST=0.0.0.0 --env BASE_URL="https://api.picardata.com" \
              --env STRIPE_PUBLISHABLE_KEY="pk_test_51IkfxbGD7jj9JSZZ83O2ikY0mjP9htqr6JyNg28P4WVwGZYJaFJqY6uElGMHIRA98188LbJLbgXIAnVoOWH0PPUQ00Q9eSoXW0" \
              -d -i 612314046177.dkr.ecr.ap-southeast-1.amazonaws.com/picardata/frontend:${{ github.event.inputs.version }} yarn start
      - name: Notify Discord On Failure
        if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: Github Actions
          DISCORD_AVATAR: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          DISCORD_EMBEDS: '[{"title":"Frontend ${{ github.event.inputs.version }} Failed","color":13369344,"author":{"name":"Author: ${{ github.actor }}"},"description":"The Frontend application deployment with version ${{ github.event.inputs.version }} failed."}]'
        uses: Ilshidur/action-discord@master
      - name: Notify Discord On Success
        if: ${{ success() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: Github Actions
          DISCORD_AVATAR: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          DISCORD_EMBEDS: '[{"title":"Frontend ${{ github.event.inputs.version }} Successful","color":52224,"author":{"name":"Author: ${{ github.actor }}"},"description":"The Frontend application with version ${{ github.event.inputs.version }} has been deployed."}]'
        uses: Ilshidur/action-discord@master
